{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar Animateble = _interopRequireWildcard(require(\"react-native-animatable\"));\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _ParkingBox = _interopRequireDefault(require(\"./Components/ParkingBox\"));\n\nvar _ParkingView = _interopRequireDefault(require(\"./Components/ParkingView\"));\n\nvar _reactNativeSharedPreferences = _interopRequireDefault(require(\"react-native-shared-preferences\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _jsxFileName = \"I:\\\\Development\\\\React native\\\\VehicleParking\\\\src\\\\Park.js\",\n    _this3 = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar Park = function (_Component) {\n  (0, _inherits2.default)(Park, _Component);\n\n  var _super = _createSuper(Park);\n\n  function Park(props) {\n    var _this2;\n\n    (0, _classCallCheck2.default)(this, Park);\n    _this2 = _super.call(this, props);\n    _this2.state = {\n      status: 'Parking space is available. Click to book',\n      stBinary: true,\n      mask: _this2.props.route.params.mask,\n      inProgress: false,\n      token: '',\n      user_id: '',\n      name: _this2.props.route.params.name\n    };\n\n    _this2.showDialog = function () {\n      _this2.setState({\n        inProgress: true\n      });\n    };\n\n    _this2.hideDialog = function () {\n      _this2.setState({\n        inProgress: false\n      });\n    };\n\n    _this2.qrCode = function () {\n      if (_this2.state.stBinary) {\n        _this2.showDialog();\n\n        var _this = (0, _assertThisInitialized2.default)(_this2);\n\n        _reactNativeSharedPreferences.default.getItem(\"user_id\", function (value) {\n          _this.setState({\n            user_id: value,\n            token: Date.now() + \"\"\n          });\n\n          var formData = new FormData();\n          formData.append('user_id', value);\n          formData.append('token', _this.state.token);\n\n          _axios.default.post(\"https://www.finalproject.xyz/vehicle_parking/api/bookings.php\", formData).then(function (response) {\n            _this.hideDialog();\n\n            console.log(JSON.stringify(response.data));\n\n            _reactNative.ToastAndroid.show('Successfully booked', _reactNative.ToastAndroid.SHORT);\n\n            console.log(response);\n          }).catch(function (error) {\n            _this.hideDialog();\n\n            console.log(error.message);\n\n            _reactNative.ToastAndroid.show('Failed to connect.....', _reactNative.ToastAndroid.SHORT);\n          });\n\n          _this.setState({\n            status: 'You have booked for a parking. Click to show QR code...',\n            stBinary: false\n          });\n\n          console.log(_this.state);\n        });\n      } else {\n        _this2.props.navigation.navigate('QR', {\n          token: _this2.state.token\n        });\n      }\n    };\n\n    _this2.dashboard = function () {};\n\n    console.log('hello');\n\n    var arr = _this2.state.mask.split(\"\");\n\n    var i = 0;\n    var p = 0;\n\n    for (i = 0; i < arr.length; i++) {\n      p += parseInt(arr[i]);\n      console.log(p);\n    }\n\n    if (p == 6) {\n      _this2.state = _objectSpread(_objectSpread({}, _this2.state), {}, {\n        status: \"Parking Space is not available...\"\n      });\n      console.log(_this2.state);\n    }\n\n    return _this2;\n  }\n\n  (0, _createClass2.default)(Park, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(Animateble.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Modal, {\n        visible: this.state.inProgress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(Animateble.View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"#00000080\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(Animateble.View, {\n        style: {\n          backgroundColor: \"white\",\n          padding: 10,\n          borderRadius: 5,\n          width: \"80%\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.progressHeader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }\n      }, \"Loading...\"), _react.default.createElement(_reactNative.ActivityIndicator, {\n        size: \"large\",\n        color: \"#009387\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }\n      })))), _react.default.createElement(_reactNative.Text, {\n        style: styles.welcome,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, \"Welcome Mr. \", this.state.name), _react.default.createElement(_ParkingView.default, {\n        mask: this.state.mask,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }), _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n        onPress: this.qrCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: styles.book,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }, this.state.status)), _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n        onPress: this.dashboard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(Btn, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n  return Park;\n}(_react.Component);\n\nvar _default = Park;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  welcome: {\n    fontSize: 18,\n    margin: 20\n  },\n  book: {\n    fontSize: 20,\n    padding: 20,\n    elevation: 2,\n    margin: 20,\n    borderStyle: \"solid\",\n    marginTop: 50,\n    color: '#FFFFFF',\n    backgroundColor: '#28a745',\n    backgroundColor: '#009387',\n    borderRadius: 7,\n    textAlign: \"center\",\n    borderColor: '#28A745'\n  }\n});\n\nvar Btn = function Btn() {\n  a = function a() {\n    console.log('abcd');\n  };\n\n  return _react.default.createElement(_reactNative.Button, {\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  });\n};","map":{"version":3,"sources":["I:/Development/React native/VehicleParking/src/Park.js"],"names":["Dimensions","get","width","height","Park","props","state","status","stBinary","mask","route","params","inProgress","token","user_id","name","showDialog","setState","hideDialog","qrCode","_this","SharedPreferences","getItem","value","Date","now","formData","FormData","append","axios","post","then","response","console","log","JSON","stringify","data","ToastAndroid","show","SHORT","catch","error","message","navigation","navigate","dashboard","arr","split","i","p","length","parseInt","flex","backgroundColor","justifyContent","alignItems","padding","borderRadius","styles","progressHeader","welcome","book","Component","StyleSheet","create","fontSize","margin","elevation","borderStyle","marginTop","color","textAlign","borderColor","Btn","a"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    Image,\r\n    StatusBar,\r\n    Dimensions,\r\n    Modal,\r\n    ActivityIndicator,\r\n    ToastAndroid,\r\n    Button\r\n} from 'react-native';\r\nimport * as Animateble from 'react-native-animatable';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport ParkingBox from \"./Components/ParkingBox\";\r\nimport ParkingView from \"./Components/ParkingView\";\r\nimport {View} from 'react-native-animatable';\r\nconst {width,height} = Dimensions.get('window');\r\n//var SharedPreferences = require('react-native-shared-preferences');\r\nimport SharedPreferences from 'react-native-shared-preferences';\r\nimport axios from 'axios';\r\nclass Park extends Component {\r\n    state ={\r\n        status : 'Parking space is available. Click to book',\r\n        stBinary : true,\r\n        mask : this.props.route.params.mask,\r\n        inProgress : false,\r\n        token : '',\r\n        user_id : '',\r\n        name : this.props.route.params.name\r\n    }\r\n    showDialog=()=>{\r\n        this.setState({inProgress:true});\r\n    }\r\n    hideDialog=()=>{\r\n        this.setState({inProgress:false});\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        console.log('hello');\r\n        let arr = this.state.mask.split(\"\");\r\n        var i = 0;\r\n        var p = 0;\r\n        for(i=0;i<arr.length;i++){\r\n            p+=parseInt(arr[i]);\r\n            console.log(p);\r\n        }\r\n        if(p==6){\r\n            this.state = {\r\n                ...this.state,\r\n                status : \"Parking Space is not available...\"\r\n            }\r\n            console.log(this.state);\r\n        }\r\n    }\r\n    qrCode = () => {\r\n        if(this.state.stBinary){\r\n            this.showDialog();\r\n            let _this = this;\r\n            \r\n            SharedPreferences.getItem(\"user_id\", function(value){\r\n                \r\n                _this.setState({\r\n                    user_id:value,\r\n                    token : Date.now()+\"\"\r\n                })\r\n                let formData = new FormData();\r\n                formData.append('user_id',value);\r\n                formData.append('token',_this.state.token); \r\n                axios.post(\"https://www.finalproject.xyz/vehicle_parking/api/bookings.php\", formData).then(\r\n                    response=> {\r\n                        _this.hideDialog();\r\n                        console.log(JSON.stringify(response.data));\r\n                        ToastAndroid.show('Successfully booked',ToastAndroid.SHORT);\r\n                        console.log(response);\r\n                    }\r\n                ).catch(error=> {\r\n                    _this.hideDialog();\r\n                    console.log(error.message);\r\n                    ToastAndroid.show('Failed to connect.....',ToastAndroid.SHORT);\r\n                });\r\n                _this.setState({\r\n                    status : 'You have booked for a parking. Click to show QR code...',\r\n                    stBinary : false\r\n                })\r\n                console.log(_this.state);\r\n            });\r\n\r\n            \r\n        }else{\r\n            this.props.navigation.navigate('QR',{\r\n                token : this.state.token\r\n            });\r\n        }\r\n        \r\n    }\r\n    componentWillUnmount(){\r\n        \r\n    }\r\n    dashboard = () => {\r\n        \r\n    }\r\n    render() {\r\n        //console.log(this.props.route.params.mask);\r\n        \r\n        return (\r\n            <>\r\n                <View>\r\n                    <Modal\r\n                    visible={this.state.inProgress}>\r\n                    <View style={{ flex:1,backgroundColor:\"#00000080\", justifyContent:\"center\",alignItems:\"center\"}}>\r\n                        <View style={{backgroundColor:\"white\",padding:10,borderRadius:5, width:\"80%\", alignItems:\"center\"}}>\r\n                            <Text style={styles.progressHeader}>Loading...</Text>\r\n                            <ActivityIndicator size=\"large\" color=\"#009387\"/>\r\n                        </View>\r\n                    </View>\r\n                    </Modal>\r\n                    <Text\r\n                        style={styles.welcome}\r\n                        >\r\n                        Welcome Mr. {this.state.name}\r\n                    </Text>\r\n                    <ParkingView mask={this.state.mask}/>\r\n                    <TouchableOpacity\r\n                    onPress = {this.qrCode}>\r\n                        <Text style = {styles.book}>\r\n                            {this.state.status}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                    {/* <TouchableOpacity\r\n                    onPress={this.qrCode}>\r\n                        <Text style = {styles.book}>\r\n                            Qr Code\r\n                        </Text>\r\n                    </TouchableOpacity> */}\r\n                    <TouchableOpacity\r\n                    onPress = {this.dashboard}>\r\n                        <Btn/>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Park;\r\nconst styles = StyleSheet.create({\r\n    welcome: {\r\n        fontSize : 18,\r\n        margin: 20\r\n    },  \r\n    book : {\r\n        fontSize: 20,\r\n        padding: 20,\r\n        elevation: 2,\r\n        // backgroundColor: \"#00FF00\",\r\n        margin: 20,\r\n        borderStyle: \"solid\",\r\n        marginTop: 50,\r\n        color: '#FFFFFF',\r\n        backgroundColor: '#28a745',\r\n        backgroundColor: '#009387',\r\n        borderRadius: 7,\r\n        textAlign: \"center\",\r\n        borderColor: '#28A745'\r\n    }\r\n\r\n    // .btn-success{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:hover{color:#fff;background-color:#218838;border-color:#1e7e34}.btn-success.focus,.btn-success:focus{box-shadow:0 0 0 .2rem rgba(40,167,69,.5)}.btn-success.disabled,.btn-success:disabled{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:not(:disabled):not(.disabled).active,.btn-success:not(:disabled):not(.disabled):active,.show>.btn-success.dropdown-toggle{color:#fff;background-color:#1e7e34;border-color:#1c7430}.btn-success:not(:disabled):not(.disabled).active:focus,.btn-success:not(:disabled):not(.disabled):active:focus,.show>.btn-success.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(40,167,69,.5)}\r\n});\r\nconst Btn = () => {\r\n    a = () => {\r\n        console.log('abcd')\r\n    }\r\n    return (\r\n        <Button />\r\n    )\r\n} "]},"metadata":{},"sourceType":"script"}